{
	"info": {
		"_postman_id": "a3a7042e-5044-4e56-bba5-653754a733c8",
		"name": "Oson_CollectionForGit",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "14289685",
		"_collection_link": "https://orange-equinox-950167.postman.co/workspace/OsonAPITesting~ec34bde8-0898-4855-a5a7-d7c58c075aa5/collection/14289685-a3a7042e-5044-4e56-bba5-653754a733c8?action=share&source=collection_link&creator=14289685"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var responseCode = pm.response.code;",
									"",
									"    if(responseCode === 200 || responseCode === 201){",
									"        console.log(\"token: \", pm.response.json().token);",
									"        pm.environment.set(\"token\", pm.response.json().token);",
									"        console.log(\"Expected status code:\", responseCode);",
									"    } else {",
									"        console.log(\"token: \", \"\");",
									"        pm.environment.set(\"token\", \"\");",
									"        console.log(\"Unexpected status code:\", responseCode);",
									"        console.log(\"Response body:\", pm.response.text());",
									"",
									"        // Fail the test if the status code is 404 or 500",
									"        pm.expect(responseCode).to.not.be.oneOf([404, 500]);",
									"    }",
									"",
									"    // Assert that the status code must be either 200 or 201",
									"    pm.expect(responseCode).to.be.oneOf([200, 201]);",
									"});",
									"console.log(\"Environment Variables:\");",
									"console.log(\"Base URL: \", pm.environment.get(\"baseUrl\"));",
									"console.log(\"Token: \", pm.environment.get(\"token\"));",
									"",
									"/*",
									"pm.test(\"Status code is not 404 or 500\", function () {",
									"    if (pm.response.code === 404 && pm.response.code === 500) {",
									"        console.log(\"token: \", \"\");",
									"        pm.environment.set(\"token\", \"\");",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"    //pm.expect(pm.response.code).not.to.eql(404);",
									"    pm.expect(pm.response.code).not.to.be.eql([404, 500]);",
									"});",
									"*/"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "phone",
									"value": "{{phone_number}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "dev_id",
									"value": "{{dev_id}}",
									"type": "text"
								},
								{
									"key": "device_name",
									"value": "{{platform}}",
									"type": "text"
								},
								{
									"key": "app_version",
									"value": "{{app_version}}",
									"type": "text"
								},
								{
									"key": "platform",
									"value": "{{platform}}",
									"type": "text"
								}
							]
						},
						"url": "{{url}}/user/login"
					},
					"response": []
				},
				{
					"name": "Get User QR Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"url": "{{url}}/user/qr"
					},
					"response": []
				},
				{
					"name": "Set avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200){",
									"        //console.log(response.token);",
									"        //pm.environment.set(\"token\",response.token);   ",
									"    }",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "avatar",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": "{{url}}/user/avatar"
					},
					"response": []
				},
				{
					"name": "Get User info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200){",
									"        //console.log(response.token);",
									"        //pm.environment.set(\"token\",response.token);   ",
									"    }",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"url": "{{url}}/user/info"
					},
					"response": []
				},
				{
					"name": "Get balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/user/balance?total=1&primary=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"balance"
							],
							"query": [
								{
									"key": "total",
									"value": "1"
								},
								{
									"key": "primary",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user avatar by phone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/user/icon?phone=998998043512",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"icon"
							],
							"query": [
								{
									"key": "phone",
									"value": "998998043512"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set User Info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Ahmadjon",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "0",
									"type": "text"
								},
								{
									"key": "registration",
									"value": "0",
									"type": "text"
								},
								{
									"key": "email",
									"value": "ahmad@m.ru",
									"type": "text"
								},
								{
									"key": "notify",
									"value": "1",
									"type": "text"
								},
								{
									"key": "lang",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": "{{url}}/user/info"
					},
					"response": []
				},
				{
					"name": "Get user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"        //pm.expect(pm.response.code).not.to.eql(404);",
									"        pm.expect(pm.response.code).not.to.be.oneOf([404, 500]);",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/user/data_v2?version=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"data_v2"
							],
							"query": [
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pasport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"        pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"        //pm.expect(pm.response.code).not.to.eql(404);",
									"        pm.expect(pm.response.code).not.to.be.oneOf([404, 500]);",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});",
									"/*",
									"pm.test(\"Status code is not 404 or 500\", function () {",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"    //pm.expect(pm.response.code).not.to.eql(404);",
									"    pm.expect(pm.response.code).not.to.be.oneOf([404, 500]);",
									"});",
									"*/"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{url}}/user/full_auth_info"
					},
					"response": []
				},
				{
					"name": "Set Passport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"        //pm.expect(pm.response.code).not.to.eql(404);",
									"        pm.expect(pm.response.code).not.to.be.oneOf([404, 500]);",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "fio",
									"value": "Ahmadjon Mullamuhamedov",
									"type": "text"
								},
								{
									"key": "date_of_birth",
									"value": "21-05-1994",
									"type": "text"
								},
								{
									"key": "nationality",
									"value": "O`zbek",
									"type": "text"
								},
								{
									"key": "citizenship",
									"value": "O`zbek",
									"type": "text"
								},
								{
									"key": "passport_serial",
									"value": "AB",
									"type": "text"
								},
								{
									"key": "passport_number",
									"value": "123213",
									"type": "text"
								},
								{
									"key": "passport_start_date",
									"value": "21-05-2015",
									"type": "text"
								},
								{
									"key": "passport_end_date",
									"value": "21-05-2025",
									"type": "text"
								},
								{
									"key": "passport_image",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": "{{url}}/user/full_auth_info"
					},
					"response": []
				},
				{
					"name": "Get Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "phone",
									"value": "[\"+998998043512\", \"+998974498333\"]",
									"type": "text",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "[\"+998901208485\",\"+998971001231\",\"+998977020430\",\"+998903311919\",\"+998943201288\",\"+998996637055\",\"+998946518781\",\"+998936893236\",\"+998909429271\",\"+998889008665\",\"+998946569939\",\"+998945477746\",\"+998909386253\",\"+998943222499\",\"+998931386767\",\"+998943188884\",\"+998945492925\",\"+998939686959\",\"+998936580657\",\"+998933961063\",\"+998936877090\",\"+998946336421\",\"+998903244214\",\"+998998280050\",\"+998934560508\",\"+998909307333\",\"+998911919777\",\"+998934780708\",\"+998909319652\",\"+998974498333\"]",
									"type": "text",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "[\"+998909319652\",\"+998974498333\",\"+998981170408\",\"+998981266591\",\"+998977422808\",\"+998977682310\",\"+998933909993\",\"+998998646566\",\"+998934776838\",\"+998977156840\",\"+998990771442\",\"+998936896909\",\"+998909971229\",\"+998936219687\",\"+998903464425\",\"+998977732381\",\"+998911649335\",\"+998933999959\",\"+998977722441\",\"+998977020430\",\"+998945444838\",\"+998934590242\",\"+998936260313\",\"+998990306743\",\"+998935970996\",\"+998990857799\",\"+998903575786\",\"+998943663344\",\"+998934597141\",\"+998977704941\",\"+998909938414\",\"+998998693999\",\"+998971001245\",\"+998903266644\",\"+998995611096\",\"+998998037944\",\"+998334575545\",\"+998981171766\",\"+998331999100\",\"+998941988432\",\"+998930050366\",\"+998935813830\",\"+998946452225\",\"+998936580657\",\"+998712693821\",\"+998998692122\",\"+998932007743\",\"+998977121299\",\"+998936541792\",\"+998943923388\",\"+998977753588\",\"+998946301230\",\"+998935669616\",\"+998934104204\",\"+998935812471\",\"+998883336421\",\"+998931810602\",\"+998936867046\",\"+998946142892\",\"+998903587006\",\"+998945492925\",\"+998977824806\",\"+998901102861\",\"+998971030142\",\"+998997944171\",\"+998946625092\",\"+998995773236\",\"+998945423102\",\"+998933790002\",\"+998912274149\",\"+998911903192\",\"+998996548604\",\"+998933961063\",\"+998977303940\",\"+998998220063\",\"+998909963940\",\"+998946909466\",\"+998946080291\",\"+998998647577\",\"+998909847065\",\"+998903156455\",\"+998934560508\",\"+998930786850\",\"+998998049981\",\"+998903180764\",\"+998946426409\",\"+998909489814\",\"+998909340004\",\"+998903176363\",\"+998991019009\",\"+998933983866\",\"+998998143512\",\"+998900060642\",\"+998977152281\",\"+998903575977\",\"+998903244214\",\"+998946546164\",\"+998935909212\",\"+998908750202\",\"+998946854485\",\"+998971001224\",\"+998935331477\",\"+998909013802\",\"+998712480191\",\"+998903311919\",\"+998935774726\",\"+998949865151\",\"+998941274961\",\"+998977309778\",\"+998977301442\",\"+998934340558\",\"+998998196418\",\"+998909985799\",\"+998998285002\",\"+998936893236\",\"+998946808878\",\"+998933765928\",\"+998933924068\",\"+998995068186\",\"+998998805442\",\"+998935959194\",\"+998909180263\",\"+998712900316\",\"+998998493319\",\"+998946999595\",\"+998990395269\",\"+998943433388\",\"+998939680857\",\"+998941276788\",\"+998934711654\",\"+998930815652\",\"+998932973413\",\"+998998570136\",\"+998331999100\",\"+998910147084\",\"+998903556503\",\"+998935461817\",\"+998972496030\",\"+998974241776\",\"+998936825292\",\"+998712429094\",\"+998993871727\",\"+998971001228\",\"+998943188882\",\"+998909386253\",\"+998901883864\",\"+989153307919\",\"+998943188882\",\"+998974707781\",\"+998936576082\",\"+998939130008\",\"+998998043512\",\"+998977070846\",\"+998977012758\",\"+998916971112\",\"+998946592482\",\"+998942469339\",\"+998974401767\",\"+998946505151\",\"+998980006164\",\"+998652237412\",\"+998935331477\",\"+998998143698\",\"+998946527470\",\"+998998166776\",\"+998935147916\",\"+998951940808\",\"+998945477746\",\"+998909984594\",\"+998998043512\",\"+998998980388\",\"+998936540669\",\"+998941856609\",\"+998971311492\",\"+998712917192\",\"+998909429271\",\"+998944173582\",\"+998903914198\",\"+998998242066\",\"+998934527094\",\"+998909173838\",\"+998971346699\",\"+998974233554\",\"+998977722221\",\"+998971001237\",\"+998909313285\",\"+998911521976\",\"+998998706481\",\"+998977764090\",\"+998901744449\",\"+998934790715\",\"+998977200894\",\"+998943208393\",\"+998903456766\",\"+998977309778\",\"+998932480841\",\"+998911344230\",\"+998998172372\",\"+998935611330\",\"+998935282925\",\"+998998493319\",\"+(555)7664823\",\"+(707)5551854\",\"+998903595330\",\"+998936558522\",\"+998973011080\",\"+998945278481\",\"+998946592936\",\"+998944040270\",\"+998977079973\",\"+998935569619\",\"+998909932262\",\"+998990041020\",\"+998998229987\",\"+998971101203\",\"+998909961975\",\"+998993515199\",\"+998933970026\",\"+998946856888\",\"+998945441440\",\"+998942220225\",\"+998936542822\",\"+998911349846\",\"+998936877090\",\"+998934104204\",\"+998942472502\",\"+998934584142\",\"+998337441144\",\"+998919912828\",\"+998998723727\",\"+998903450292\",\"+998977706134\",\"+998946279732\",\"+998936826070\",\"+998946823149\",\"+998977704914\",\"+998942931413\",\"+998977456785\",\"+998974414995\",\"+998943264595\",\"+998712944758\",\"+998933787176\",\"+998945494202\",\"+998977752133\",\"+998936818186\",\"+998939678373\",\"+998931861469\",\"+998941260637\",\"+998939670057\",\"+998943280715\",\"+998971001231\",\"+998935743324\",\"+998998865252\",\"+998951703652\",\"+998933119090\",\"+998943222499\",\"+998945477746\",\"+998933775657\",\"+998998749273\",\"+998914400903\",\"+998946132363\",\"+998914470007\",\"+998911333016\",\"+998946815402\",\"+998974036688\",\"+998909520501\",\"+998944070226\",\"+998994031444\",\"+998998236007\",\"+998652231573\",\"+998998865252\",\"+998998555252\",\"+998943188884\",\"+998945492925\",\"+998974025288\",\"+998936667788\",\"+998931840502\",\"+998935437333\",\"+998999889818\",\"+998903704170\",\"+998998978707\",\"+998939615204\",\"+998973034565\",\"+998997055500\",\"+998937557543\",\"+998999296446\",\"+390833505037\",\"+998936547161\",\"+998936524380\",\"+998946406468\",\"+998914807300\",\"+998946452225\",\"+998998043512\",\"+998903372278\",\"+998934730038\",\"+998997010090\",\"+989943280715\",\"+998934741005\",\"+998930815652\",\"+998946445598\",\"+998942465404\",\"+998909929100\",\"+998997055011\",\"+998997231520\",\"+998933921051\",\"+998909386253\",\"+998903725224\",\"+998935967722\",\"+998998805960\",\"+998946656452\",\"+998977711146\",\"+998933026208\",\"+998981249008\",\"+998981178970\",\"+998903460405\",\"+998946215564\",\"+998936815560\",\"+998712007797\",\"+998931429747\",\"+998935550900\",\"+998909830858\",\"+998909052225\",\"+998977332585\",\"+998938656556\",\"+998881871441\",\"+998974457784\",\"+998935291754\",\"+998911919777\",\"+998983629699\",\"+998941228916\",\"+998901208485\",\"+998937030657\",\"+998998387375\",\"+998935331477\",\"+998932910444\",\"+998993659963\",\"+998337697679\",\"+998936657781\",\"+998903725224\",\"+998935517035\",\"+998904432272\",\"+998936524380\",\"+998933927010\",\"+998932011122\",\"+998906171873\",\"+998906171873\",\"+998977919193\",\"+998909992782\",\"+998933929292\",\"+998902652427\",\"+998946344341\",\"+998712653512\",\"+998932351500\",\"+998887884747\",\"+998935079277\",\"+998944558522\",\"+998935600588\",\"+998998412102\",\"+998946777701\",\"+380666650591\",\"+998946413000\",\"+998931801060\",\"+998946873419\",\"+998977455245\",\"+998971336133\",\"+998982610997\",\"+998974253505\",\"+998977364086\",\"+998974883800\",\"+998971330408\",\"+998936241955\",\"+998998327413\",\"+998909199219\",\"+998941111127\",\"+998936206726\",\"+998933940170\",\"+998935564245\",\"+998935760209\",\"+998900113321\",\"+998945392444\",\"+998977444084\",\"+998971301442\",\"+998977281218\",\"+998998744207\",\"+998909174231\",\"+998998850666\",\"+998990359939\",\"+998941287076\",\"+998770053004\",\"+998909167530\",\"+998943433388\",\"+998934512426\",\"+998935826293\",\"+998941858880\",\"+998936881786\",\"+998936216962\",\"+998943260637\",\"+998935636050\",\"+998974289889\",\"+998946436800\",\"+998951771332\",\"+998903214484\",\"+998936210073\",\"+998971101219\",\"+998977717339\",\"+998935608370\",\"+998900332017\",\"+998936619758\",\"+998977709430\",\"+998914496761\",\"+998998194495\",\"+998945446454\",\"+998974552363\",\"+998712976430\",\"+998974115377\",\"+998997956621\",\"+998936864886\",\"+998998621539\",\"+998998154438\",\"+998944178357\",\"+998997098416\",\"+998971101219\",\"+998946354995\",\"+998936203132\",\"+998998980511\",\"+998901878866\",\"+998914022600\",\"+998977605570\",\"+998900028855\",\"+998946196909\",\"+998998383413\",\"+998998818008\",\"+998936567566\",\"+998946360037\",\"+998998477472\",\"+998888308300\",\"+998990552464\",\"+998946336421\",\"+998974873333\",\"+998998294138\",\"+998946518781\",\"+998998965442\",\"+998998965442\",\"+998943221004\",\"+998977138633\",\"+998970001977\",\"+998909720816\",\"+998933056203\",\"+998996637055\",\"+998900994214\",\"+998909663830\",\"+998909079633\",\"+998911339397\",\"+998909449075\",\"+998998711994\",\"+998934557543\",\"+998935846095\",\"+998911917881\",\"+998909971229\",\"+998914023158\",\"+998946773158\",\"+998998630777\",\"+998909720816\",\"+998911638242\",\"+998971330408\",\"+998934522287\",\"+998916451675\",\"+998945423103\",\"+998936837791\",\"+(408)5555270\",\"+(408)5553514\",\"+998942200077\",\"+998997013514\",\"+998936556760\",\"+998998865252\",\"+998977634103\",\"+998936860743\",\"+998935510033\",\"+998909610333\",\"+998998297703\",\"+998909847885\",\"+998909506276\",\"+998909291909\",\"+998946137900\",\"+998900810044\",\"+998936252454\",\"+998930050366\",\"+998946080291\",\"+998973423366\",\"+998935305063\",\"+998977711188\",\"+998934710804\",\"+998909344232\",\"+998935305063\",\"+998936657781\",\"+998998154438\",\"+998997055500\",\"+998946505151\",\"+998998493319\",\"+998998865252\",\"+998974149771\",\"+998977436693\",\"+998936252454\",\"+998930050366\",\"+998998043512\",\"+998990041020\",\"+998970007420\",\"+998909720816\",\"+998998980388\",\"+998946344341\",\"+998946080291\",\"+998943260637\",\"+998971001257\",\"+998337377113\",\"+998901208485\",\"+998971001231\",\"+998977020430\",\"+998903311919\",\"+998943201288\",\"+998996637055\",\"+998946518781\",\"+998936893236\",\"+998909429271\",\"+998889008665\",\"+998946569939\",\"+998945477746\",\"+998909386253\",\"+998943222499\",\"+998931386767\",\"+998943188884\",\"+998945492925\",\"+998939686959\",\"+998936580657\",\"+998933961063\",\"+998936877090\",\"+998946336421\",\"+998903244214\",\"+998998280050\",\"+998934560508\",\"+998909307333\",\"+998911919777\",\"+998934780708\"]",
									"type": "text"
								}
							]
						},
						"url": "{{url}}/user/contacts_v2"
					},
					"response": []
				},
				{
					"name": "All data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "region_id",
								"value": "2",
								"type": "text",
								"disabled": true
							}
						],
						"url": "{{url}}user/start_data"
					},
					"response": []
				},
				{
					"name": "wallet balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{url}}/wallet/balance"
					},
					"response": []
				},
				{
					"name": "get jivo token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{url}}/user/jivo_token"
					},
					"response": []
				},
				{
					"name": "get user image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    ",
									"    //pm.test(\"Response is a JPEG image\", function () {",
									"        //pm.response.to.have.header(\"Content-Type\", \"image/jpeg\");",
									"    //});",
									"    if(pm.response.code === 200 || pm.response.code === 201){",
									"        if(pm.response.to.have.header(\"content-type\", \"image/png\")){",
									"            console.log(\"response: \", \"file type is PNG\");",
									"        }",
									"        else{",
									"            console.log(\"response: \", \"file type is not PNG\");",
									"        }",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://core.oson.uz:4080/geticon/32363535385f38633536376539633137653361383938333934616162626461393635336563363633356235616438.png"
					},
					"response": []
				},
				{
					"name": "set user language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"// Get the environment variable",
									"    var token = pm.environment.get(\"token\");",
									"",
									"    // Check if the variable is not empty or undefined",
									"    //pm.expect(token).to.not.be.undefined; // Method-1",
									"    //pm.expect(token).to.not.be.null; // Method-2",
									"    //pm.expect(token).to.not.equal(\"\"); // Method-3",
									"if(pm.expect(token).to.not.equal(\"\")){",
									"    pm.test(\"Status code is 200 or 201\", function () {",
									"        var response = pm.response.json();",
									"        var responseCode = pm.response.code;",
									"        console.log(responseCode);",
									"        if(responseCode === 200 || pm.response.code === 201){",
									"            console.log(\"errstr: \", response.errstr);",
									"            //pm.environment.set(\"token\",response.token);",
									"            console.log(\"Expected status code:\", pm.response.code);",
									"        }",
									"        if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"            console.log(\"errstr: \", response.errstr);",
									"            console.log(\"Unexpected status code:\", pm.response.code);",
									"            console.log(\"Response body:\", pm.response.text());",
									"        }",
									"",
									"        //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"        //pm.response.to.have.status(200);",
									"    });",
									"}",
									"else{",
									"    console.log(\"token was empty\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "lang",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": "{{url}}user/lang"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.clear();",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    var response = pm.response.json();",
									"    var responseCode = pm.response.code;",
									"    console.log(responseCode);",
									"    if(responseCode === 200 || pm.response.code === 201){",
									"        console.log(\"errstr: \", response.errstr);",
									"        //pm.environment.set(\"token\",response.token);",
									"        console.log(\"Expected status code:\", pm.response.code);",
									"    }",
									"    if (pm.response.code !== 200 && pm.response.code !== 201) {",
									"        console.log(\"errstr: \", response.errstr);",
									"        console.log(\"Unexpected status code:\", pm.response.code);",
									"        console.log(\"Response body:\", pm.response.text());",
									"    }",
									"",
									"    //pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    //pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": "{{url}}/user/logout"
					},
					"response": []
				}
			]
		}
	]
}